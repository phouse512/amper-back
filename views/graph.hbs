<script src="http://code.highcharts.com/highcharts.js"></script>
<script src="http://code.highcharts.com/modules/exporting.js"></script>
<script src="https://cdn.socket.io/socket.io-1.3.5.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.10.2/moment.min.js"></script>

<div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>

<script type="text/javascript">
moment().format();
points = "{{pointsString}}";
points = points.replace(/&quot;/g, '"');
points = $.parseJSON(points);
points = points.reverse();

$(function () {
    $(document).ready(function () {
        Highcharts.setOptions({
            global: {
                useUTC: false
            }
        });

        newChart = $('#container').highcharts({
            chart: {
                type: 'spline',
                animation: Highcharts.svg, // don't animate in old IE
                marginRight: 10,
            },
            title: {
                text: 'Live current data'
            },
            xAxis: {
                type: 'datetime',
                tickPixelInterval: 150
            },
            yAxis: {
                title: {
                    text: 'Current'
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            tooltip: {
                formatter: function () {
                    return '<b>' + this.series.name + '</b><br/>' +
                        Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' +
                        Highcharts.numberFormat(this.y, 2);
                }
            },
            legend: {
                enabled: false
            },
            exporting: {
                enabled: false
            },
            series: [{
                name: 'Current datapoint',
                data: (function () {
                    // generate an array of random data
                    var data = [],
                        time = (new Date()).getTime(),
                        i;

                    for(i = 0; i < points.length; i++){
                    	//console.log(points[i].timestamp);
                    	data.push({
                    		x: parseInt(moment(points[i].timestamp).format('x')),
                    		y: parseInt(points[i].current),
                    	});
                    }
                    console.log(data);
                    return data;


                    // for (i = -19; i <= 0; i += 1) {
                    //     data.push({
                    //         x: time + i * 1000,
                    //         y: Math.random()
                    //     });
                    // }
                    // return data;
                }())
            }]
        });
		var intervalArray = [];
		var intervalCount = 0;
		var socket = io.connect('http://104.236.24.179:3000');
		socket.on('data', function(data) {
			//console.log(data);
			//series.addPoint([(new Date()).getTime(), 2], true, true);
			console.log(data);

			data = data['1'];
			data = data.splice(0,data.length-1);

			// for(i=0; i < data.length; i++){
			// 	console.log(i);
			// 	console.log($("#container").highcharts());
			// 	newChart.highcharts().series[0].addPoint([Date.now()+i*i, parseInt(data[i].current)], true, true);
			// }
			
			count = 0;
			interval = setInterval(function() {
				if(count >= data.length){
					window.clearInterval(interval);
				} else {
					newChart.highcharts().series[0].addPoint([parseInt(moment(data[count].timestamp).format('x')), parseInt(data[count].current)], true, true);
					console.log(count);
					count += 1;
				}
			}, 1000);

			//intervalCount += 1;

			// for(i=0; i<data.length; i++){
			// 	series.addPoint([moment(data[i].timestamp), parseInt(data[i].current)], true, true);
			// }
			// count = 0;
			// interval = setInterval(function() {
			// 	if(count >= data.length){
			// 		clearInterval(interval);
			// 	} else {
			// 		x = moment(data[count].timestamp);
			// 		y = parseInt(data[count].current);
			// 		series.addPoint([x,y], true, true);
			// 		count += 1;
			// 	}
			// }, 1000);
		});
    });
});
</script>